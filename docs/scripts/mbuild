#!/usr/bin/env bash

# name: built
# desc: building static webpage using pandoc
# usage: `./mbuild` in webpage root dir
# author: m7tkr
# edited: 20240126025449

# setting directories
SCRIPT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
ROOT_DIR=${SCRIPT_DIR%/scripts*}

# check for docs/ folder existence
if [[ -z `grep docs <<< $ROOT_DIR` ]]; then
  echo "mbuild: grep: no docs/ folder for the script to init"
  exit 1
fi

# check for notes/ folder existence
if [[ -z `find "$ROOT_DIR" -type d -iname notes` ]]; then
  echo "mbuild: no notes/ folder for the script to init"
  exit 1
fi

# filtering 1st pos parameter
case "$1" in
  root  ) SEARCH_FOLDER="$ROOT_DIR -maxdepth 1" 
          TEMPLATE="$ROOT_DIR/assets/root.html" ;;
  mlang ) LANG=$2 
          source ${SCRIPT_DIR}/mlang ${LANG} || exit 1
          TEMPLATE="$ROOT_DIR/assets/note_${LANG}.html" ;;
  *     ) echo 'mbuild: usage: mbuild <root | mlang>'; exit 1 ;;
esac

# loop iterating over notes and adding them into notes array above
while IFS= read -r note; do

  # get note's first line which contains date
  ntitle=$( sed -n '1p' < "$note" )

  case "$note" in
    *$LANG/index.md  ) TEMPLATE="$ROOT_DIR/assets/index_$LANG.html"  ;;
    *404.md       ) ntitle=404     ;; 
  esac

  if [[ -n `grep index <<< $note` ]]; then
    ntitle=index
  fi

  dir_md=${note%/*.md}
  OUTPUT_DIR=${dir_md/notes/}

  # don't change location of the block below, if not neccessary
  # create dir if no exists
  if [[ ! -d $OUTPUT_DIR ]]; then
    mkdir -p "$OUTPUT_DIR"
  fi

  printf 'building: %s \n' "${note}"
  pandoc --mathjax \
       --template "${TEMPLATE}" \
       --metadata title="${ntitle}" \
       -o "$OUTPUT_DIR/${ntitle}.html" \
       --from markdown+multiline_tables \
       "${note}"

done < <( find ${SEARCH_FOLDER} -iname '*.md' | sort -V )

# TODO: below doesn't work properly
#printf '%s pages built\n' "$(( ${#notes[@]} + 1 ))"
